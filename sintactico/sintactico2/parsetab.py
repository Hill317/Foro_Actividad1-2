
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA CONCATENACION FOR I IGUAL INCREMENTO INT LABIERTO LCERRADO MENORIGUAL NUMERO OUT PABIERTO PCERRADO PRINTLN PUNTO PUNTOCOMA SYSTEMciclofor : FOR PABIERTO inicializacion PUNTOCOMA condicion PUNTOCOMA incremento PCERRADO cuerpoinicializacion : INT I IGUAL NUMEROcondicion : I MENORIGUAL NUMEROincremento : I INCREMENTOcuerpo : LABIERTO sentencia LCERRADOsentencia : SYSTEM PUNTO OUT PUNTO PRINTLN PABIERTO cadena CONCATENACION I PCERRADO PUNTOCOMAcadena : CADENA'
    
_lr_action_items = {'FOR':([0,],[2,]),'$end':([1,19,23,],[0,-1,-5,]),'PABIERTO':([2,27,],[3,28,]),'INT':([3,],[5,]),'PUNTOCOMA':([4,8,13,16,33,],[6,11,-2,-3,34,]),'I':([5,6,11,31,],[7,9,15,32,]),'IGUAL':([7,],[10,]),'MENORIGUAL':([9,],[12,]),'NUMERO':([10,12,],[13,16,]),'PCERRADO':([14,18,32,],[17,-4,33,]),'INCREMENTO':([15,],[18,]),'LABIERTO':([17,],[20,]),'SYSTEM':([20,],[22,]),'LCERRADO':([21,34,],[23,-6,]),'PUNTO':([22,25,],[24,26,]),'OUT':([24,],[25,]),'PRINTLN':([26,],[27,]),'CADENA':([28,],[30,]),'CONCATENACION':([29,30,],[31,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ciclofor':([0,],[1,]),'inicializacion':([3,],[4,]),'condicion':([6,],[8,]),'incremento':([11,],[14,]),'cuerpo':([17,],[19,]),'sentencia':([20,],[21,]),'cadena':([28,],[29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ciclofor","S'",1,None,None,None),
  ('ciclofor -> FOR PABIERTO inicializacion PUNTOCOMA condicion PUNTOCOMA incremento PCERRADO cuerpo','ciclofor',9,'p_ciclofor','sintactico.py',93),
  ('inicializacion -> INT I IGUAL NUMERO','inicializacion',4,'p_inicializacion','sintactico.py',96),
  ('condicion -> I MENORIGUAL NUMERO','condicion',3,'p_condicion','sintactico.py',99),
  ('incremento -> I INCREMENTO','incremento',2,'p_incremento','sintactico.py',102),
  ('cuerpo -> LABIERTO sentencia LCERRADO','cuerpo',3,'p_cuerpo','sintactico.py',105),
  ('sentencia -> SYSTEM PUNTO OUT PUNTO PRINTLN PABIERTO cadena CONCATENACION I PCERRADO PUNTOCOMA','sentencia',11,'p_sentencia','sintactico.py',108),
  ('cadena -> CADENA','cadena',1,'p_cadena','sintactico.py',111),
]
